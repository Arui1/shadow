set(shadow_cpu_src)
set(shadow_gpu_src)
set(shadow_example_src)
set(shadow_tools_src)
set(shadow_test_src)

add_subdirectory(core)
add_subdirectory(examples)
add_subdirectory(layers)
add_subdirectory(test)
add_subdirectory(tools)
add_subdirectory(util)

include_directories(".")

if (CUDA_FOUND)
  cuda_add_library(shadow SHARED ${shadow_cpu_src} ${shadow_gpu_src})
  target_link_libraries(shadow ${Shadow_LINKER_LIBS})
else ()
  add_library(shadow SHARED ${shadow_cpu_src})
  target_link_libraries(shadow ${Shadow_LINKER_LIBS})
endif ()
install(TARGETS shadow DESTINATION lib)
install(DIRECTORY core layers util DESTINATION include/shadow FILES_MATCHING PATTERN "*.hpp")

add_executable(demo ${shadow_example_src})
target_link_libraries(demo shadow)
install(TARGETS demo DESTINATION bin)

add_executable(caffe2shadow ${shadow_tools_src})
target_compile_definitions(caffe2shadow PRIVATE -DUSE_Protobuf)
target_link_libraries(caffe2shadow proto)
if (${USE_GLog} STREQUAL "ON")
  target_link_libraries(caffe2shadow glog)
endif ()
install(TARGETS caffe2shadow DESTINATION bin)

if (BUILD_TEST)
  add_executable(test_shadow ${shadow_test_src})
  target_link_libraries(test_shadow shadow pthread)
  install(TARGETS test_shadow DESTINATION bin)
endif ()
